---
---

<form id="contactForm" class="max-w-lg mx-auto bg-white p-8 rounded-lg shadow-lg hover:shadow-xl transition-all duration-300">
    <div class="mb-6">
      <label for="name" class="block text-gray-800 font-medium mb-2 text-sm uppercase tracking-wide">Name</label>
      <input 
        type="text" 
        id="name" 
        name="name" 
        required 
        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[rgb(47,76,121)] focus:border-transparent outline-none transition-all placeholder-gray-400 bg-gray-50 hover:bg-white"
        placeholder="Your name"
      />
    </div>
  
    <div class="mb-6">
      <label for="email" class="block text-gray-800 font-medium mb-2 text-sm uppercase tracking-wide">Email</label>
      <input 
        type="email" 
        id="email" 
        name="email" 
        required 
        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[rgb(47,76,121)] focus:border-transparent outline-none transition-all placeholder-gray-400 bg-gray-50 hover:bg-white"
        placeholder="your.email@example.com"
      />
    </div>
  
    <div class="mb-6">
      <label for="subject" class="block text-gray-800 font-medium mb-2 text-sm uppercase tracking-wide">Subject</label>
      <input 
        type="text" 
        id="subject" 
        name="subject" 
        required 
        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[rgb(47,76,121)] focus:border-transparent outline-none transition-all placeholder-gray-400 bg-gray-50 hover:bg-white"
        placeholder="What is this about?"
      />
    </div>
  
    <div class="mb-6">
      <label for="message" class="block text-gray-800 font-medium mb-2 text-sm uppercase tracking-wide">Message</label>
      <textarea 
        id="message" 
        name="message" 
        rows="5" 
        required 
        class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-[rgb(47,76,121)] focus:border-transparent outline-none transition-all resize-none placeholder-gray-400 bg-gray-50 hover:bg-white"
        placeholder="Your message here..."
      ></textarea>
    </div>
  
    <div class="flex justify-center">
      <button 
        type="submit" 
        class="group px-6 py-3 bg-[rgb(47,76,121)] text-white font-medium rounded-full hover:bg-[rgb(47,76,121)]/80 transition-all duration-300 focus:outline-none focus:ring-2 focus:ring-[rgb(47,76,121)] focus:ring-opacity-50 shadow-md hover:shadow-lg transform hover:-translate-y-1 flex items-center gap-2"
      >
        <span>Send Message</span>
        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 transform group-hover:translate-x-1 transition-transform" viewBox="0 0 20 20" fill="currentColor">
          <path fill-rule="evenodd" d="M10.293 5.293a1 1 0 011.414 0l4 4a1 1 0 010 1.414l-4 4a1 1 0 01-1.414-1.414L12.586 11H5a1 1 0 110-2h7.586l-2.293-2.293a1 1 0 010-1.414z" clip-rule="evenodd" />
        </svg>
      </button>
    </div>
  
    <div id="formStatus" class="mt-4 text-center hidden"></div>
  </form>
  
  <script>
    document.addEventListener('DOMContentLoaded', () => {
      const form = document.getElementById('contactForm') as HTMLFormElement;
      const formStatus = document.getElementById('formStatus');
      
      if (form && formStatus) {
        form.addEventListener('submit', async (e) => {
          e.preventDefault();
          
          // Show sending status
          formStatus.textContent = 'Sending message...';
          formStatus.className = 'mt-4 text-center text-[rgb(47,76,121)] flex items-center justify-center gap-2';
          
          // Add loading indicator with Tailwind classes
          const loadingSpinner = document.createElement('div');
          loadingSpinner.className = 'animate-spin h-5 w-5 border-2 border-[rgb(47,76,121)] border-t-transparent rounded-full';
          formStatus.prepend(loadingSpinner);
          
          try {
            // Simulate API call
            await new Promise(resolve => setTimeout(resolve, 1500));
            
            // Show success message
            formStatus.innerHTML = '';
            formStatus.textContent = 'Message sent successfully!';
            formStatus.className = 'mt-4 text-center text-green-600 bg-green-50 py-2 px-4 rounded-lg border border-green-200';
            form.reset();
            
            // Hide message after 5 seconds
            setTimeout(() => {
              formStatus.className = 'mt-4 text-center hidden';
            }, 5000);
          } catch (error) {
            // Show error message
            formStatus.innerHTML = '';
            formStatus.textContent = 'Failed to send message. Please try again.';
            formStatus.className = 'mt-4 text-center text-red-600 bg-red-50 py-2 px-4 rounded-lg border border-red-200';
          }
        });
      }
    });
  </script>