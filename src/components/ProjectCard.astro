---
interface Props {
  title: string;
  description: string;
  tags: string[];
  image: string;
  link: string;
}

const { title, description, tags, image, link } = Astro.props;
---

<article class="bg-white rounded-xl overflow-hidden shadow-lg hover:shadow-xl transition-all duration-300 flex flex-col h-full group transform hover:-translate-y-2">
  <div class="relative">
    <img src={image} alt={title} class="w-full h-48 object-cover" />
    <div class="absolute inset-0 bg-gradient-to-t from-black/70 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300 flex items-end">
      <a href={link} target="_blank" rel="noopener noreferrer" class="w-full text-center bg-[rgb(47,76,121)] text-white py-2 hover:bg-[rgb(47,76,121)]/80 transition-colors">
        <span class="inline-flex items-center justify-center gap-1">
          View Project
          <svg xmlns="http://www.w3.org/2000/svg" class="h-4 w-4" fill="none" viewBox="0 0 24 24" stroke="currentColor">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3" />
          </svg>
        </span>
      </a>
    </div>
  </div>
  <div class="p-4 flex-grow flex flex-col justify-between">
    <div>
      <h3 class="text-xl font-bold mb-2 group-hover:text-[rgb(47,76,121)] transition-colors">{title}</h3>
      <p class="text-gray-700 mb-4">{description}</p>
    </div>
    <div class="flex flex-wrap gap-2">
      {tags.map((tag) => (
        <span class="bg-gray-100 text-gray-800 px-2 py-1 rounded-full text-xs hover:bg-[rgb(47,76,121)]/10 transition-colors">{tag}</span>
      ))}
    </div>
  </div>
</article>